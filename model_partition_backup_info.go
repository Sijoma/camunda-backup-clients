/*
Backup Management API

Management endpoint to query, take, and delete backups of Zeebe.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package camunda_backup_clients

import (
	"encoding/json"
	"time"
)

// PartitionBackupInfo Detailed info of the backup for a given partition.
type PartitionBackupInfo struct {
	PartitionId int32 `json:"partitionId"`
	State StateCode `json:"state"`
	// Failure reason if stats is 'FAILED'
	FailureReason *string `json:"failureReason,omitempty"`
	// The timestamp at which the backup was started on this partition.
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// The timestamp at which the backup was last updated on this partition, e.g. changed state from IN_PROGRESS to COMPLETED. 
	LastUpdatedAt *time.Time `json:"lastUpdatedAt,omitempty"`
	// The ID of the snapshot which is included in this backup.
	SnapshotId *string `json:"snapshotId,omitempty"`
	// The position of the checkpoint for this backup.
	CheckpointPosition *int64 `json:"checkpointPosition,omitempty"`
	// The ID of the broker from which the backup was taken for this partition.
	BrokerId *int32 `json:"brokerId,omitempty"`
	// The version of the broker from which the backup was taken for this partition.
	BrokerVersion *string `json:"brokerVersion,omitempty"`
}

// NewPartitionBackupInfo instantiates a new PartitionBackupInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartitionBackupInfo(partitionId int32, state StateCode) *PartitionBackupInfo {
	this := PartitionBackupInfo{}
	this.PartitionId = partitionId
	this.State = state
	return &this
}

// NewPartitionBackupInfoWithDefaults instantiates a new PartitionBackupInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartitionBackupInfoWithDefaults() *PartitionBackupInfo {
	this := PartitionBackupInfo{}
	return &this
}

// GetPartitionId returns the PartitionId field value
func (o *PartitionBackupInfo) GetPartitionId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PartitionId
}

// GetPartitionIdOk returns a tuple with the PartitionId field value
// and a boolean to check if the value has been set.
func (o *PartitionBackupInfo) GetPartitionIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PartitionId, true
}

// SetPartitionId sets field value
func (o *PartitionBackupInfo) SetPartitionId(v int32) {
	o.PartitionId = v
}

// GetState returns the State field value
func (o *PartitionBackupInfo) GetState() StateCode {
	if o == nil {
		var ret StateCode
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *PartitionBackupInfo) GetStateOk() (*StateCode, bool) {
	if o == nil {
    return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *PartitionBackupInfo) SetState(v StateCode) {
	o.State = v
}

// GetFailureReason returns the FailureReason field value if set, zero value otherwise.
func (o *PartitionBackupInfo) GetFailureReason() string {
	if o == nil || isNil(o.FailureReason) {
		var ret string
		return ret
	}
	return *o.FailureReason
}

// GetFailureReasonOk returns a tuple with the FailureReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartitionBackupInfo) GetFailureReasonOk() (*string, bool) {
	if o == nil || isNil(o.FailureReason) {
    return nil, false
	}
	return o.FailureReason, true
}

// HasFailureReason returns a boolean if a field has been set.
func (o *PartitionBackupInfo) HasFailureReason() bool {
	if o != nil && !isNil(o.FailureReason) {
		return true
	}

	return false
}

// SetFailureReason gets a reference to the given string and assigns it to the FailureReason field.
func (o *PartitionBackupInfo) SetFailureReason(v string) {
	o.FailureReason = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PartitionBackupInfo) GetCreatedAt() time.Time {
	if o == nil || isNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartitionBackupInfo) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PartitionBackupInfo) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PartitionBackupInfo) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetLastUpdatedAt returns the LastUpdatedAt field value if set, zero value otherwise.
func (o *PartitionBackupInfo) GetLastUpdatedAt() time.Time {
	if o == nil || isNil(o.LastUpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdatedAt
}

// GetLastUpdatedAtOk returns a tuple with the LastUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartitionBackupInfo) GetLastUpdatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.LastUpdatedAt) {
    return nil, false
	}
	return o.LastUpdatedAt, true
}

// HasLastUpdatedAt returns a boolean if a field has been set.
func (o *PartitionBackupInfo) HasLastUpdatedAt() bool {
	if o != nil && !isNil(o.LastUpdatedAt) {
		return true
	}

	return false
}

// SetLastUpdatedAt gets a reference to the given time.Time and assigns it to the LastUpdatedAt field.
func (o *PartitionBackupInfo) SetLastUpdatedAt(v time.Time) {
	o.LastUpdatedAt = &v
}

// GetSnapshotId returns the SnapshotId field value if set, zero value otherwise.
func (o *PartitionBackupInfo) GetSnapshotId() string {
	if o == nil || isNil(o.SnapshotId) {
		var ret string
		return ret
	}
	return *o.SnapshotId
}

// GetSnapshotIdOk returns a tuple with the SnapshotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartitionBackupInfo) GetSnapshotIdOk() (*string, bool) {
	if o == nil || isNil(o.SnapshotId) {
    return nil, false
	}
	return o.SnapshotId, true
}

// HasSnapshotId returns a boolean if a field has been set.
func (o *PartitionBackupInfo) HasSnapshotId() bool {
	if o != nil && !isNil(o.SnapshotId) {
		return true
	}

	return false
}

// SetSnapshotId gets a reference to the given string and assigns it to the SnapshotId field.
func (o *PartitionBackupInfo) SetSnapshotId(v string) {
	o.SnapshotId = &v
}

// GetCheckpointPosition returns the CheckpointPosition field value if set, zero value otherwise.
func (o *PartitionBackupInfo) GetCheckpointPosition() int64 {
	if o == nil || isNil(o.CheckpointPosition) {
		var ret int64
		return ret
	}
	return *o.CheckpointPosition
}

// GetCheckpointPositionOk returns a tuple with the CheckpointPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartitionBackupInfo) GetCheckpointPositionOk() (*int64, bool) {
	if o == nil || isNil(o.CheckpointPosition) {
    return nil, false
	}
	return o.CheckpointPosition, true
}

// HasCheckpointPosition returns a boolean if a field has been set.
func (o *PartitionBackupInfo) HasCheckpointPosition() bool {
	if o != nil && !isNil(o.CheckpointPosition) {
		return true
	}

	return false
}

// SetCheckpointPosition gets a reference to the given int64 and assigns it to the CheckpointPosition field.
func (o *PartitionBackupInfo) SetCheckpointPosition(v int64) {
	o.CheckpointPosition = &v
}

// GetBrokerId returns the BrokerId field value if set, zero value otherwise.
func (o *PartitionBackupInfo) GetBrokerId() int32 {
	if o == nil || isNil(o.BrokerId) {
		var ret int32
		return ret
	}
	return *o.BrokerId
}

// GetBrokerIdOk returns a tuple with the BrokerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartitionBackupInfo) GetBrokerIdOk() (*int32, bool) {
	if o == nil || isNil(o.BrokerId) {
    return nil, false
	}
	return o.BrokerId, true
}

// HasBrokerId returns a boolean if a field has been set.
func (o *PartitionBackupInfo) HasBrokerId() bool {
	if o != nil && !isNil(o.BrokerId) {
		return true
	}

	return false
}

// SetBrokerId gets a reference to the given int32 and assigns it to the BrokerId field.
func (o *PartitionBackupInfo) SetBrokerId(v int32) {
	o.BrokerId = &v
}

// GetBrokerVersion returns the BrokerVersion field value if set, zero value otherwise.
func (o *PartitionBackupInfo) GetBrokerVersion() string {
	if o == nil || isNil(o.BrokerVersion) {
		var ret string
		return ret
	}
	return *o.BrokerVersion
}

// GetBrokerVersionOk returns a tuple with the BrokerVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartitionBackupInfo) GetBrokerVersionOk() (*string, bool) {
	if o == nil || isNil(o.BrokerVersion) {
    return nil, false
	}
	return o.BrokerVersion, true
}

// HasBrokerVersion returns a boolean if a field has been set.
func (o *PartitionBackupInfo) HasBrokerVersion() bool {
	if o != nil && !isNil(o.BrokerVersion) {
		return true
	}

	return false
}

// SetBrokerVersion gets a reference to the given string and assigns it to the BrokerVersion field.
func (o *PartitionBackupInfo) SetBrokerVersion(v string) {
	o.BrokerVersion = &v
}

func (o PartitionBackupInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["partitionId"] = o.PartitionId
	}
	if true {
		toSerialize["state"] = o.State
	}
	if !isNil(o.FailureReason) {
		toSerialize["failureReason"] = o.FailureReason
	}
	if !isNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !isNil(o.LastUpdatedAt) {
		toSerialize["lastUpdatedAt"] = o.LastUpdatedAt
	}
	if !isNil(o.SnapshotId) {
		toSerialize["snapshotId"] = o.SnapshotId
	}
	if !isNil(o.CheckpointPosition) {
		toSerialize["checkpointPosition"] = o.CheckpointPosition
	}
	if !isNil(o.BrokerId) {
		toSerialize["brokerId"] = o.BrokerId
	}
	if !isNil(o.BrokerVersion) {
		toSerialize["brokerVersion"] = o.BrokerVersion
	}
	return json.Marshal(toSerialize)
}

type NullablePartitionBackupInfo struct {
	value *PartitionBackupInfo
	isSet bool
}

func (v NullablePartitionBackupInfo) Get() *PartitionBackupInfo {
	return v.value
}

func (v *NullablePartitionBackupInfo) Set(val *PartitionBackupInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePartitionBackupInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePartitionBackupInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartitionBackupInfo(val *PartitionBackupInfo) *NullablePartitionBackupInfo {
	return &NullablePartitionBackupInfo{value: val, isSet: true}
}

func (v NullablePartitionBackupInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartitionBackupInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


